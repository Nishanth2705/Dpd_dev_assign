user nginx;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;
        log_format custom '$time_local - $request';
        access_log /var/log/nginx/access.log custom;

      
        gzip on;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

server {
  
    listen 8080;         #changing the default port from 80 to 8080
    server_name localhost;

    # For static files
    root /usr/share/nginx/html;
    index index.html;

    # For reverse proxy (example: Java app on port 8080)
    location /service_1/ {
        #proxy_pass http://172.31.4.191:8001;  in prod the server ips are used as applications are deployed in diff server or hostname is used and mapped in /etc/hosts here
        # docker daemon manages the network by identifying the service name withot actual ip
        proxy_pass http://service_1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
	
	location /service_2/ {
       # proxy_pass http://172.31.4.191:8002;
        proxy_pass http://service_2:8002/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
}
